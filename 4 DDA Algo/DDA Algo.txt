#include<stdio.h>
#include<math.h>
#include<GL/gl.h>
#include<GL/glut.h>

void display()
{
    glClear(GL_COLOR_BUFFER_BIT);

    glColor3f(0.0,1.0,1.0);

    float x = 0;
    float y = 0;
    float xn = 50.0;
    float  yn = 60.0;
    float xk = x, yk = y;
    int k = 0;
    float dx = (xn - x);
    float dy = (yn - y);
    float m = dy/dx;

    if (m > 1.0)
    {
        while(xk<xn && yk<yn)
        {
            yk = yk + 1;
            xk = xk + 1/m;

            glBegin(GL_POINTS);
            glVertex2f(roundf(xk),roundf(yk));
            printf("\n%f    %f",xk,yk);
            glEnd();
        }
        glFlush();
    }

    else if (m < 1.0)
    {
        while(xk<xn && yk<yn)
        {
            yk = yk + m;
            xk = xk + 1;

            glBegin(GL_POINTS);
            glVertex2f(roundf(xk),roundf(yk));
            printf("\n%f    %f",xk,yk);
            glEnd();
        }
        glFlush();
    }

    else if (m == 1.0)
    {
        while(xk<xn && yk<yn)
        {
            yk = yk + 1;
            xk = xk + 1;

            glBegin(GL_POINTS);
            glVertex2f(roundf(xk),roundf(yk));
            printf("\n%f    %f",xk,yk);
            glEnd();
        }
        glFlush();
    }

    else if (m == 1.0)
    {
        while(xk<xn && yk<yn)
        {
            yk = yk + 1;
            xk = xk + 1;

            glBegin(GL_POINTS);
            glVertex2f(roundf(xk),roundf(yk));
            printf("\n%f    %f",xk,yk);
            glEnd();
        }
        glFlush();
    }

    else if (m < -1.0)
    {
        while(xk<xn && yk<yn)
        {
            yk = yk - 1;
            xk = xk - 1/m;

            glBegin(GL_POINTS);
            glVertex2f(roundf(xk),roundf(yk));
            printf("\n%f    %f",xk,yk);
            glEnd();
        }
        glFlush();
    }

    else if (-1.0 <= m <= 0)
    {
        while(xk<xn && yk<yn)
        {
            yk = yk - m;
            xk = xk - 1;

            glBegin(GL_POINTS);
            glVertex2f(roundf(xk),roundf(yk));
            printf("\n%f    %f",xk,yk);
            glEnd();
        }
        glFlush();
    }
}

void  init(void)
{
    glClearColor(0.0, 0.0, 0.0, 0.0);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    glOrtho(0.0, 100.0, 0.0, 100.0, -1.0, 1.0);
}

int main(int argc, char** argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(500,500);
    glutInitWindowPosition(100,100);
    glutCreateWindow("DDA Algo");
    init();
    glutDisplayFunc(display);
    glutMainLoop();
    return 0;
}
